{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kayky Ruan\\\\Downloads\\\\react-projects-master\\\\react-projects-master\\\\todo-list\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n  const [editTodoId, setEditTodoId] = useState(null);\n  const [editTodoText, setEditTodoText] = useState(\"\");\n\n  function startEditTodo(id, text) {\n    setEditTodoId(id);\n    setEditTodoText(text);\n  }\n\n  function saveEditedTodo(id) {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      text: editTodoText\n    } : todo));\n    setEditTodoId(null); // Limpa o estado de edição\n  }\n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter(todo => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every(todo => todo.completed);\n    const updatedTodos = todos.map(todo => ({ ...todo,\n      completed: !allCompleted\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter(todo => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"todo-input\",\n          placeholder: \"What needs to be done?\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === \"Enter\" && addTodo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-button\",\n          onClick: markAllCompleted,\n          title: \"Marcar todas como completas / incompletas\",\n          children: todos.every(todo => todo.completed) ? \"\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: filteredTodos().map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `todo-item ${todo.completed ? \"completed\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"todo-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"left-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: todo.completed,\n                onChange: () => toggleTodoCompletion(todo.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 8\n              }, this), editTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"edit-input\",\n                value: editTodoText,\n                onChange: e => setEditTodoText(e.target.value),\n                onBlur: () => saveEditedTodo(todo.id),\n                onKeyPress: e => {\n                  if (e.key === \"Enter\") saveEditedTodo(todo.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 10\n              }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"todo-text\",\n                onDoubleClick: () => startEditTodo(todo.id, todo.text),\n                children: todo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 4\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => removeTodo(todo.id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 4\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 4\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-count\",\n          children: [todos.length, \" item(s) left!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"all\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"all\"),\n            style: filter === \"all\" ? {\n              border: \"1px solid red\"\n            } : {},\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"active\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"active\"),\n            style: filter === \"active\" ? {\n              border: \"1px solid red\"\n            } : {},\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"completed\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"completed\"),\n            style: filter === \"completed\" ? {\n              border: \"1px solid red\"\n            } : {},\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCompleted,\n          className: \"clear-completed-btn\",\n          children: \"Clear completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"wmKqJourfFeBpTSsDUC0S6ijJoU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Kayky Ruan/Downloads/react-projects-master/react-projects-master/todo-list/src/pages/Home.jsx"],"names":["React","useState","Home","todos","setTodos","filter","setFilter","input","setInput","editTodoId","setEditTodoId","editTodoText","setEditTodoText","startEditTodo","id","text","saveEditedTodo","map","todo","addTodo","trim","newTodo","Date","now","completed","toggleTodoCompletion","removeTodo","clearCompleted","markAllCompleted","allCompleted","every","updatedTodos","filteredTodos","e","target","value","key","length","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nexport default function Home() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n  const [editTodoId, setEditTodoId] = useState(null);\n  const [editTodoText, setEditTodoText] = useState(\"\");\n\n  \n  function startEditTodo(id, text) {\n    setEditTodoId(id);\n    setEditTodoText(text);\n  }\n\n  function saveEditedTodo(id) {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, text: editTodoText } : todo\n      )\n    );\n    setEditTodoId(null); // Limpa o estado de edição\n  }\n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false,\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter((todo) => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every((todo) => todo.completed);\n    const updatedTodos = todos.map((todo) => ({\n      ...todo,\n      completed: !allCompleted,\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter((todo) => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter((todo) => todo.completed);\n    }\n    return todos;\n  }\n\n  return (\n    <>\n      <h1>Todos</h1>\n      <div className=\"todo-app\">\n        <div className=\"todo-input-container\">\n          <input\n            type=\"text\"\n            className=\"todo-input\"\n            placeholder=\"What needs to be done?\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && addTodo()}\n          />\n          <button\n            className=\"mark-all-button\"\n            onClick={markAllCompleted}\n            title=\"Marcar todas como completas / incompletas\"\n          >\n            {todos.every((todo) => todo.completed) ? \"\" : \"\"}\n          </button>\n\n          \n        </div>\n        <ul className=\"todo-list\">\n  {filteredTodos().map((todo) => (\n   <li key={todo.id} className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n   <div className=\"todo-content\">\n     <div className=\"left-content\">\n       <input\n         type=\"checkbox\"\n         checked={todo.completed}\n         onChange={() => toggleTodoCompletion(todo.id)}\n       />\n       {editTodoId === todo.id ? (\n         <input\n           type=\"text\"\n           className=\"edit-input\"\n           value={editTodoText}\n           onChange={(e) => setEditTodoText(e.target.value)}\n           onBlur={() => saveEditedTodo(todo.id)}\n           onKeyPress={(e) => {\n             if (e.key === \"Enter\") saveEditedTodo(todo.id);\n           }}\n         />\n       ) : (\n         <span className=\"todo-text\" onDoubleClick={() => startEditTodo(todo.id, todo.text)}>{todo.text}</span>\n       )}\n     </div>\n     \n   </div>\n\n   <button className=\"delete-button\" onClick={() => removeTodo(todo.id)}>X</button>\n </li>\n  \n  ))}\n</ul>\n        <div className=\"footer\">\n          <span className=\"item-count\">{todos.length} item(s) left!</span>\n          <div className=\"filters\">\n            <button\n              className={filter === \"all\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"all\")}\n              style={filter === \"all\" ? { border: \"1px solid red\" } : {}}\n            >\n              All\n            </button>\n            <button\n              className={filter === \"active\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"active\")}\n              style={filter === \"active\" ? { border: \"1px solid red\" } : {}}\n            >\n              Active\n            </button>\n            <button\n              className={filter === \"completed\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"completed\")}\n              style={filter === \"completed\" ? { border: \"1px solid red\" } : {}}\n            >\n              Completed\n            </button>\n          </div>\n          <button onClick={clearCompleted} className=\"clear-completed-btn\">Clear completed</button>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}