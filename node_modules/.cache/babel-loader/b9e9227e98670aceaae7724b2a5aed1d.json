{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kayky Ruan\\\\Downloads\\\\react-projects-master\\\\react-projects-master\\\\todo-list\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n  const [editTodoId, setEditTodoId] = useState(null);\n  const [editTodoText, setEditTodoText] = useState(\"\");\n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter(todo => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every(todo => todo.completed);\n    const updatedTodos = todos.map(todo => ({ ...todo,\n      completed: !allCompleted\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function startEditTodo(id, text) {\n    setEditTodoId(id);\n    setEditTodoText(text);\n  }\n\n  function saveEditedTodo(id) {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      text: editTodoText\n    } : todo));\n    setEditTodoId(null);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter(todo => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        placeholder: \"What needs to be done?\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === \"Enter\" && addTodo()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mark-all-button\",\n        onClick: markAllCompleted,\n        title: \"Marcar todas como completas / incompletas\",\n        children: todos.every(todo => todo.completed) ? \"Marcar todas como incompletas\" : \"Marcar todas como completas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: filteredTodos().map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `todo-item ${todo.completed ? \"completed\" : \"\"}`,\n        children: [editTodoId === todo.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"edit-input\",\n          value: editTodoText,\n          onChange: e => setEditTodoText(e.target.value),\n          onBlur: () => saveEditedTodo(todo.id),\n          onKeyPress: e => {\n            if (e.key === \"Enter\") saveEditedTodo(todo.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => toggleTodoCompletion(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onDoubleClick: () => startEditTodo(todo.id, todo.text),\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => removeTodo(todo.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"item-count\",\n        children: [todos.length, \" item(s) left!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === \"all\" ? \"selected\" : \"\",\n          onClick: () => setFilter(\"all\"),\n          style: filter === \"all\" ? {\n            border: \"1px solid red\"\n          } : {},\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === \"active\" ? \"selected\" : \"\",\n          onClick: () => setFilter(\"active\"),\n          style: filter === \"active\" ? {\n            border: \"1px solid red\"\n          } : {},\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: filter === \"completed\" ? \"selected\" : \"\",\n          onClick: () => setFilter(\"completed\"),\n          style: filter === \"completed\" ? {\n            border: \"1px solid red\"\n          } : {},\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCompleted,\n        className: \"clear-completed-btn\",\n        children: \"Clear completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Home, \"wmKqJourfFeBpTSsDUC0S6ijJoU=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Kayky Ruan/Downloads/react-projects-master/react-projects-master/todo-list/src/pages/Home.jsx"],"names":["React","useState","Home","todos","setTodos","filter","setFilter","input","setInput","editTodoId","setEditTodoId","editTodoText","setEditTodoText","addTodo","trim","newTodo","id","Date","now","text","completed","toggleTodoCompletion","map","todo","removeTodo","clearCompleted","markAllCompleted","allCompleted","every","updatedTodos","startEditTodo","saveEditedTodo","filteredTodos","e","target","value","key","length","border"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"./style.css\";\n\nexport default function Home() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n  const [editTodoId, setEditTodoId] = useState(null);\n  const [editTodoText, setEditTodoText] = useState(\"\");\n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false,\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter((todo) => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every((todo) => todo.completed);\n    const updatedTodos = todos.map((todo) => ({\n      ...todo,\n      completed: !allCompleted,\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function startEditTodo(id, text) {\n    setEditTodoId(id);\n    setEditTodoText(text);\n  }\n\n  function saveEditedTodo(id) {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, text: editTodoText } : todo\n      )\n    );\n    setEditTodoId(null);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter((todo) => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter((todo) => todo.completed);\n    }\n    return todos;\n  }\n\n  return (\n    <div className=\"todo-app\">\n      <h1>Todos</h1>\n      <div className=\"todo-input-container\">\n        <input\n          type=\"text\"\n          className=\"todo-input\"\n          placeholder=\"What needs to be done?\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={(e) => e.key === \"Enter\" && addTodo()}\n        />\n        <button\n          className=\"mark-all-button\"\n          onClick={markAllCompleted}\n          title=\"Marcar todas como completas / incompletas\"\n        >\n          {todos.every((todo) => todo.completed) ? \"Marcar todas como incompletas\" : \"Marcar todas como completas\"}\n        </button>\n      </div>\n      <ul className=\"todo-list\">\n        {filteredTodos().map((todo) => (\n          <li key={todo.id} className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\n            {editTodoId === todo.id ? (\n              <input\n                type=\"text\"\n                className=\"edit-input\"\n                value={editTodoText}\n                onChange={(e) => setEditTodoText(e.target.value)}\n                onBlur={() => saveEditedTodo(todo.id)}\n                onKeyPress={(e) => {\n                  if (e.key === \"Enter\") saveEditedTodo(todo.id);\n                }}\n              />\n            ) : (\n              <>\n                <input\n                  type=\"checkbox\"\n                  checked={todo.completed}\n                  onChange={() => toggleTodoCompletion(todo.id)}\n                />\n                <span onDoubleClick={() => startEditTodo(todo.id, todo.text)}>{todo.text}</span>\n              </>\n            )}\n            <button className=\"delete-button\" onClick={() => removeTodo(todo.id)}>X</button>\n          </li>\n        ))}\n      </ul>\n\n\n        <div className=\"footer\">\n          <span className=\"item-count\">{todos.length} item(s) left!</span>\n          <div className=\"filters\">\n            <button\n              className={filter === \"all\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"all\")}\n              style={filter === \"all\" ? { border: \"1px solid red\" } : {}}\n            >\n              All\n            </button>\n            <button\n              className={filter === \"active\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"active\")}\n              style={filter === \"active\" ? { border: \"1px solid red\" } : {}}\n            >\n              Active\n            </button>\n            <button\n              className={filter === \"completed\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"completed\")}\n              style={filter === \"completed\" ? { border: \"1px solid red\" } : {}}\n            >\n              Completed\n            </button>\n          </div>\n          <button onClick={clearCompleted} className=\"clear-completed-btn\">Clear completed</button>\n        </div>\n      </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}