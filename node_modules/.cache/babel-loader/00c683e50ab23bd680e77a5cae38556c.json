{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kayky Ruan\\\\Downloads\\\\react-projects-master\\\\react-projects-master\\\\todo-list\\\\src\\\\pages\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"./style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      completed: !todo.completed\n    } : todo));\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter(todo => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every(todo => todo.completed);\n    const updatedTodos = todos.map(todo => ({ ...todo,\n      completed: !allCompleted\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter(todo => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter(todo => todo.completed);\n    }\n\n    return todos;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"todo-input\",\n          placeholder: \"O que voce quer fazer?\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === \"Enter\" && addTodo()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mark-all-button\",\n          onClick: markAllCompleted,\n          title: \"Marcar todas como completas / incompletas\",\n          children: todos.every(todo => todo.completed) ? \"☑️\" : \"◻️\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo-list\",\n        children: filteredTodos().map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `todo-item ${todo.completed ? \"completed\" : \"\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: todo.completed,\n            onChange: () => toggleTodoCompletion(todo.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: todo.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => removeTodo(todo.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"item-count\",\n          children: [todos.length, \" item(s) left!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"all\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"all\"),\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"active\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"active\"),\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: filter === \"completed\" ? \"selected\" : \"\",\n            onClick: () => setFilter(\"completed\"),\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCompleted,\n          children: \"Clear completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"Hqj3sHnipQuZCZn9JGEuvAfohp8=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Kayky Ruan/Downloads/react-projects-master/react-projects-master/todo-list/src/pages/Home.jsx"],"names":["React","useState","useEffect","ReactDOM","Home","todos","setTodos","filter","setFilter","input","setInput","addTodo","trim","newTodo","id","Date","now","text","completed","toggleTodoCompletion","map","todo","removeTodo","clearCompleted","markAllCompleted","allCompleted","every","updatedTodos","filteredTodos","e","target","value","key","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ReactDOM from 'react-dom';\nimport \"./style.css\";\n\nexport default function Home() {\n  const [todos, setTodos] = useState([]);\n  const [filter, setFilter] = useState(\"all\");\n  const [input, setInput] = useState(\"\");\n\n \n\n  function addTodo() {\n    if (input.trim() !== \"\") {\n      const newTodo = {\n        id: Date.now(),\n        text: input,\n        completed: false,\n      };\n      setTodos([...todos, newTodo]);\n      setInput(\"\");\n    }\n  }\n\n  function toggleTodoCompletion(id) {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  }\n\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function clearCompleted() {\n    setTodos(todos.filter((todo) => !todo.completed));\n  }\n\n  function markAllCompleted() {\n    const allCompleted = todos.every((todo) => todo.completed);\n    const updatedTodos = todos.map((todo) => ({\n      ...todo,\n      completed: !allCompleted,\n    }));\n    setTodos(updatedTodos);\n  }\n\n  function filteredTodos() {\n    if (filter === \"active\") {\n      return todos.filter((todo) => !todo.completed);\n    } else if (filter === \"completed\") {\n      return todos.filter((todo) => todo.completed);\n    }\n    return todos;\n  }\n\n  return (\n    <>\n      <h1>todos</h1>\n      <div className=\"todo-app\">\n        <div className=\"todo-input-container\">\n          <input\n            type=\"text\"\n            className=\"todo-input\"\n            placeholder=\"O que voce quer fazer?\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyPress={(e) => e.key === \"Enter\" && addTodo()}\n          />\n          <button\n            className=\"mark-all-button\"\n            onClick={markAllCompleted}\n            title=\"Marcar todas como completas / incompletas\"\n          >\n            {todos.every((todo) => todo.completed) ? \"☑️\" : \"◻️\"}\n          </button>\n        </div>\n        <ul className=\"todo-list\">\n          {filteredTodos().map((todo) => (\n            <li\n              key={todo.id}\n              className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => toggleTodoCompletion(todo.id)}\n              />\n              <span>{todo.text}</span>\n              <button onClick={() => removeTodo(todo.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n        <div className=\"footer\">\n          <span className=\"item-count\">{todos.length} item(s) left!</span>\n          <div className=\"filters\">\n            <button\n              className={filter === \"all\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"all\")}\n            >\n              All\n            </button>\n            <button\n              className={filter === \"active\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"active\")}\n            >\n              Active\n            </button>\n            <button\n              className={filter === \"completed\" ? \"selected\" : \"\"}\n              onClick={() => setFilter(\"completed\")}\n            >\n              Completed\n            </button>\n          </div>\n          <button onClick={clearCompleted}>Clear completed</button>\n        </div>\n      </div>\n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}